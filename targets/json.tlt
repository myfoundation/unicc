<?xml version="1.0" standalone="yes"?>
<generator name="JSON">
    <true>true</true>
    <false>false</false>

    <!--
    ****************************************************************************
    Escape sequences
    ****************************************************************************
    -->

    <!-- Backslash must be double-quoted -->
    <escape-sequence for="\" do="\\" />
    <!-- Escape double quotation marks -->
    <escape-sequence for="&#x22;" do="\&#x22;" />

    <!--
    ****************************************************************************
    Parse table templates
    ****************************************************************************
    -->

    <defprod>
        <col>            @@production-number</col>
        <col_sep>,&#x0A;</col_sep>
    </defprod>

    <acttab>
        <row_start>            {</row_start>
        <row_end>&#x0A;            }</row_end>
        <row_sep>,&#x0A;</row_sep>
        <col>&#x0A;                "@@symbol": [@@action, @@index]</col>
        <col_sep>,</col_sep>
    </acttab>

    <gotab>
        <row_start>            {</row_start>
        <row_end>&#x0A;            }</row_end>
        <row_sep>,&#x0A;</row_sep>
        <col>&#x0A;                "@@symbol": [@@action, @@index]</col>
        <col_sep>,</col_sep>
    </gotab>

    <!--
    ****************************************************************************
    Lexer
    ****************************************************************************
    -->

    <dfa_select>
        <col>            @@machine</col>
        <col_sep>,&#x0A;</col_sep>
    </dfa_select>

    <dfa_char>
        <col>            @@from, @@to</col>
        <col_sep>,&#x0A;</col_sep>
    </dfa_char>

    <dfa_trans>
        <col>            @@goto</col>
        <col_sep>,&#x0A;</col_sep>
    </dfa_trans>

    <dfa_idx>
        <row_start>            [</row_start>
        <row_end>&#x0A;            ]</row_end>
        <row_sep>,&#x0A;</row_sep>
        <col>&#x0A;                @@index</col>
        <col_sep>,</col_sep>
    </dfa_idx>

    <dfa_accept>
        <row_start>            [</row_start>
        <row_end>&#x0A;            ]</row_end>
        <row_sep>,&#x0A;</row_sep>
        <col>&#x0A;                @@accept</col>
        <col_sep>,</col_sep>
    </dfa_accept>

    <!--
    ****************************************************************************
    Symbol and production information tables
    ****************************************************************************
    -->

    <symbols>
        <col>            {
                "symbol": "@@symbol-name",
                "emit": "@@emit",
                "is-terminal": @@type,
                "is-lexem": @@lexem,
                "is-whitespace": @@whitespace,
                "is-greedy": @@greedy
            }</col>
        <col_sep>,&#x0A;</col_sep>
    </symbols>

    <productions>
        <col>            {
                "production": "@@production",
                "emit": "@@emit",
                "length": @@length,
                "left-hand-side": @@lhs
            }</col>
        <col_sep>,&#x0A;</col_sep>
    </productions>

    <!--
    ****************************************************************************
    JSON-File
    ****************************************************************************
    -->

<file filename="@@basename.json">{
    "grammar": {
        "symbols": [
@@symbols
        ],
        "productions": [
@@productions
        ],
        "goal": @@goal
    },
    "lexer": {
        "machine": [
@@dfa-select
        ],
        "indexes": [
@@dfa-index
        ],
        "chars": [
@@dfa-char
        ],
        "transitions": [
@@dfa-trans
        ],
        "accept": [
@@dfa-accept
        ]
    },
    "parser": {
        "actions": [
@@action-table
        ],
        "gotos": [
@@goto-table
        ],
        "default_productions": [
@@default-productions
        ]
    }
}
</file>

</generator>
